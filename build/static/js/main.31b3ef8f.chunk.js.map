{
  "version": 3,
  "sources": [
    "components/Section/Section.module.css",
    "components/Form/Form.module.css",
    "components/Loader/Loader.module.css",
    "components/Section/Section.js",
    "redux/actions.js",
    "services/users-api.js",
    "redux/operations.js",
    "redux/selectors.js",
    "components/Form/Form.js",
    "components/usersItem/usersItem.js",
    "components/users/users.js",
    "components/usersSearch/usersSearch.js",
    "components/Loader/Loader.js",
    "components/App.js",
    "redux/reducer.js",
    "redux/store.js",
    "index.js",
    "components/users/Users.module.css"
  ],
  "names": [
    "module",
    "exports",
    "Section",
    "title",
    "children",
    "className",
    "s",
    "section",
    "section__title",
    "changeFilter",
    "createAction",
    "fetchUsers",
    "updUser",
    "delUser",
    "fetchUsersAPI",
    "a",
    "axios",
    "get",
    "data",
    "updUserAPI",
    "name",
    "phone",
    "newUser",
    "post",
    "delUsersAPI",
    "contactId",
    "delete",
    "defaults",
    "baseURL",
    "createAsyncThunk",
    "actions",
    "users",
    "contact",
    "console",
    "log",
    "id",
    "getEntities",
    "state",
    "entities",
    "getFilter",
    "filter",
    "getLoading",
    "isLoading",
    "getVisibleUsers",
    "createSelector",
    "items",
    "item",
    "toLowerCase",
    "includes",
    "Form",
    "useState",
    "setName",
    "setPhone",
    "useSelector",
    "dispatch",
    "useDispatch",
    "onChange",
    "e",
    "currentTarget",
    "value",
    "reset",
    "form",
    "onSubmit",
    "preventDefault",
    "length",
    "operations",
    "alert",
    "type",
    "placeholder",
    "pattern",
    "required",
    "form__btn",
    "UsersItem",
    "del__btn",
    "onClick",
    "Users",
    "users__list",
    "map",
    "users__item",
    "UsersSearch",
    "wrapper",
    "event",
    "target",
    "Loader",
    "lds_wrapper",
    "lds_default",
    "Phonebook",
    "useEffect",
    "text",
    "createReducer",
    "fulfilled",
    "_",
    "action",
    "payload",
    "pending",
    "rejected",
    "error",
    "combineReducers",
    "store",
    "configureStore",
    "reducer",
    "usersReducer",
    "ReactDOM",
    "render",
    "StrictMode",
    "document",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.31b3ef8f.chunk.js",
  "sourcesContent": [
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__MKWlW\",\"section__title\":\"Section_section__title__qm4ZY\"};",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1mCBA\",\"form__btn\":\"Form_form__btn__3I_SY\"};",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds_wrapper\":\"Loader_lds_wrapper__3XSeh\",\"lds_default\":\"Loader_lds_default__132F7\"};",
    "import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <div className={s.section}>\r\n      <h2 className={s.section__title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n",
    "import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('Phonebook/changeFilter');\r\nexport const fetchUsers = createAction('Phonebook/fetchUsers');\r\nexport const updUser = createAction('Phonebook/updUser');\r\nexport const delUser = createAction('Phonebook/delUser');\r\n\r\n// export const fetchUsersRequest = createAction(\r\n//   'Phonebook/fetchUsersRequest',\r\n// );\r\n// export const fetchUsersSuccess = createAction(\r\n//   'Phonebook/fetchUsersSuccess',\r\n// );\r\n// export const fetchUsersError = createAction('Phonebook/fetchUsersError');\r\n\r\n// export const updUserRequest = createAction('Phonebook/updUserRequest');\r\n// export const updUserSuccess = createAction('Phonebook/updUserSuccess');\r\n// export const updUserError = createAction('Phonebook/updUserError');\r\n\r\n// export const delUserRequest = createAction('Phonebook/delUserRequest');\r\n// export const delUserSuccess = createAction('Phonebook/delUserSuccess');\r\n// export const delUserError = createAction('Phonebook/delUserError');\r\n",
    "import axios from 'axios';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n\r\naxios.defaults.baseURL =\r\n  'https://6191a09a41928b00176900d3.mockapi.io/phonebook';\r\n// axios.defaults.baseURL = 'http://localhost:4000';\r\n\r\nexport async function fetchUsersAPI() {\r\n  const { data } = await axios.get('/users');\r\n  return data;\r\n}\r\n\r\nexport async function updUserAPI(name, phone) {\r\n  // const newUser = { name, phone, id: uuidv4() };\r\n  const newUser = { name, phone };\r\n  const { data } = await axios.post('/users', newUser);\r\n  return data;\r\n}\r\n\r\nexport async function delUsersAPI(contactId) {\r\n  await axios.delete(`/users/${contactId}`);\r\n  return contactId;\r\n}\r\n",
    "import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as actions from './actions';\r\nimport {\r\n  fetchUsersAPI,\r\n  updUserAPI,\r\n  delUsersAPI,\r\n} from '../services/users-api';\r\n\r\nexport const fetchUsers = createAsyncThunk(\r\n  actions.fetchUsers,\r\n  async () => {\r\n    const users = await fetchUsersAPI();\r\n    return users;\r\n  },\r\n);\r\nexport const updUser = createAsyncThunk(actions.updUser, async data => {\r\n  const { name, phone } = data;\r\n  const contact = await updUserAPI(name, phone);\r\n  console.log(contact);\r\n  return contact;\r\n});\r\nexport const delUser = createAsyncThunk(actions.delUser, async id => {\r\n  const contact = await delUsersAPI(id);\r\n  return contact;\r\n});\r\n\r\n// ========== oldschool ==========\r\n// export const fetchUsers = () => async dispatch => {\r\n//   dispatch(actions.fetchUsersRequest());\r\n\r\n//   try {\r\n//     const users = await fetchUsersAPI();\r\n//     dispatch(actions.fetchUsersSuccess(users));\r\n//   } catch (error) {\r\n//     dispatch(actions.fetchUsersError(error));\r\n//   }\r\n// };\r\n\r\n// export const updUser = (name, phone) => async dispatch => {\r\n//   dispatch(actions.updUserRequest());\r\n\r\n//   try {\r\n//     const contact = await updUserAPI(name, phone);\r\n//     dispatch(actions.updUserSuccess(contact));\r\n//   } catch (error) {\r\n//     dispatch(actions.updUserError(error));\r\n//   }\r\n// };\r\n\r\n// export const delUser = id => async dispatch => {\r\n//   dispatch(actions.delUserRequest());\r\n\r\n//   try {\r\n//     const contactId = await delUsersAPI(id);\r\n//     dispatch(actions.delUserSuccess(contactId));\r\n//   } catch (error) {\r\n//     dispatch(actions.delUserError(error));\r\n//   }\r\n// };\r\n",
    "import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getEntities = state => state.users.entities;\r\nexport const getFilter = state => state.users.filter;\r\nexport const getLoading = state => state.users.isLoading;\r\nexport const getVisibleUsers = createSelector(\r\n  [getEntities, getFilter],\r\n  (items, filter) =>\r\n    items.filter(item => item.name.toLowerCase().includes(filter)),\r\n);\r\n",
    "import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport s from './Form.module.css';\r\nimport * as operations from '../../redux/operations';\r\nimport { getEntities } from '../../redux/selectors';\r\n\r\nexport default function Form() {\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const items = useSelector(getEntities);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'phone':\r\n        setPhone(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    const isUserExist = items.filter(\r\n      item => item.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n    if (isUserExist.length === 0) {\r\n      dispatch(operations.updUser({ name, phone }));\r\n    } else {\r\n      alert(`${name} is already in users.`);\r\n    }\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setPhone('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={onSubmit}>\r\n      <label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n          onChange={onChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"phone\"\r\n          placeholder=\"Number\"\r\n          value={phone}\r\n          onChange={onChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button className={s.form__btn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n",
    "import { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport s from '../users/Users.module.css';\r\nimport * as operations from '../../redux/operations';\r\n\r\nexport default function UsersItem({ id, name, phone }) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <p>\r\n        {name}: {phone}\r\n      </p>\r\n      <button\r\n        className={s.del__btn}\r\n        type=\"button\"\r\n        onClick={() => dispatch(operations.delUser(id))}\r\n      >\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nUsersItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired,\r\n};\r\n",
    "import { useSelector } from 'react-redux';\r\nimport s from './Users.module.css';\r\nimport UsersItem from '../usersItem/usersItem';\r\nimport { getVisibleUsers } from '../../redux/selectors';\r\n\r\nexport default function Users() {\r\n  const users = useSelector(getVisibleUsers);\r\n\r\n  return (\r\n    <ul className={s.users__list}>\r\n      {users.map(({ id, name, phone }) => (\r\n        <li key={id} className={s.users__item}>\r\n          <UsersItem id={id} name={name} phone={phone} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n",
    "import { useDispatch, useSelector } from 'react-redux';\r\nimport s from '../users/Users.module.css';\r\nimport * as actions from '../../redux/actions';\r\nimport { getFilter } from '../../redux/selectors';\r\n\r\nexport default function UsersSearch() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={s.wrapper}>\r\n      <input\r\n        placeholder=\"Find users by name\"\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={event =>\r\n          dispatch(actions.changeFilter(event.target.value.toLowerCase()))\r\n        }\r\n      />\r\n    </label>\r\n  );\r\n}\r\n",
    "import React from 'react';\r\nimport s from './Loader.module.css';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className={s.lds_wrapper}>\r\n      <div className={s.lds_default}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Section from './Section/Section';\nimport Form from './Form/Form';\nimport Users from './users/users';\nimport UsersSearch from './usersSearch/usersSearch';\nimport Loader from './Loader/Loader';\nimport s from './users/Users.module.css';\nimport { getEntities, getLoading } from '../redux/selectors';\nimport * as operations from '../redux/operations';\n\nexport default function Phonebook() {\n  const items = useSelector(getEntities);\n  const isLoading = useSelector(getLoading);\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(operations.fetchUsers()), [dispatch]);\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <Form />\n      </Section>\n      <Section title=\"Users\">\n        {isLoading ? (\n          <Loader />\n        ) : items.length > 0 ? (\n          <>\n            {items.length > 1 && <UsersSearch />}\n            <Users />\n          </>\n        ) : (\n          <div className={s.wrapper}>\n            <p className={s.text}>No users yet</p>\n          </div>\n        )}\n      </Section>\n    </>\n  );\n}\n",
    "import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport * as actions from './actions';\r\nimport { fetchUsers, updUser, delUser } from './operations';\r\n\r\nconst entities = createReducer([], {\r\n  [fetchUsers.fulfilled]: (_, action) => action.payload,\r\n  [updUser.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [delUser.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [fetchUsers.pending]: () => true,\r\n  [fetchUsers.fulfilled]: () => false,\r\n  [fetchUsers.rejected]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchUsers.rejected]: (_, action) => action.payload,\r\n  [fetchUsers.pending]: () => null,\r\n  [updUser.rejected]: (_, action) => action.payload,\r\n  [updUser.pending]: () => null,\r\n  [delUser.rejected]: (_, action) => action.payload,\r\n  [delUser.pending]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  entities,\r\n  isLoading,\r\n  filter,\r\n  error,\r\n});\r\n",
    "import { configureStore } from '@reduxjs/toolkit';\r\nimport usersReducer from './reducer';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    users: usersReducer,\r\n  },\r\n});\r\n",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport App from './components/App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Users_wrapper__XSqRz\",\"users__list\":\"Users_users__list__2X1Qj\",\"users__item\":\"Users_users__item__cCGUk\",\"text\":\"Users_text__2Ghv_\",\"del__btn\":\"Users_del__btn__3dEve\"};"
  ],
  "sourceRoot": ""
}
